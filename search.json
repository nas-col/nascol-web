[
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Sustainability of network analysis software",
    "section": "",
    "text": "Network analysis software is vital for many fields of science that deal with networks. But how do we ensure that future generations of researchers can keep on using that network analysis software in the future? We report on a high-level workshop meeting between various network analysis packages to discuss their sustainability.\n Network science has shown a rapid growth since the early 2000s. Networks turned out to be useful across a wide array of fields, ranging from biology to sociology. Many of the developed techniques in network science are quite specific to the empirical analysis of networks, but have clear roots in the formal branch of mathematics known as graph theory.\n\nSoftware\nAs the field matured, many different software tools have become available that help to do research on networks. These tools are not only used within the field of network science itself, but are also used by many other disciplines for which networks are relevant. Some tools provide click-and-point interfaces that facilitate easy visual exploration of networks. Other tools are more suitable for educational purposes, while others focus on performance and usability. Other packages support inferential statistics. All packages have one thing in common: it is challenging to maintain it.\nAll software requires maintenance. Almost all software depends on other software, other libraries, and operating systems. Whenever a new version of a dependency comes out, it might be that software that depends on it also needs to be updated. Network analysis software is no different. Without maintenance it would become increasingly more difficult to use as time goes by. Moreover, network science itself also leads to continuous development: faster algorithms, more accurate techniques, and novel concepts that need to be implemented.\nMuch of the network analysis software relies on volunteers. Few packages take a commercial route, and even those who do, may struggle to have sufficient resources. Maintaining and developing network analysis software is not easy. It not only requires coding skills, it often also requires some theoretical understanding of the mathematics involved. This is a quite unique combination of skills.\n\n\n\n\n\nChallenges\nOn 21-22 June 2023, representatives of various network analysis packages met in Leiden University to discuss the sustainability of their packages. During the workshop, we identified a number of common challenges.\nOne discussion point included technical issues, such as data formats to easily exchange networks between packages and differences between various implementations. These things are relevant when working with real datasets. For instance, there is often additional data for a node, related for instance to biological functions or classrooms in social networks from schools, but transporting this easily from one package to another can be challenging. Some packages count loops twice to maintain certain mathematical invariants, others count them once following the principle of least surprise for new users, and while this may seem a trivial difference, it also has consequences for other measures, such as centrality, and users wonder how to deal with these differences.\nAnother point related to resources for maintaining and developing network packages. Many projects started out as hobby projects, but hobbies change, or other priorities in life take over, making it difficult to keep maintaining that network package. At the same time, the community has grown to depend on those packages, making it even more important that somebody maintains the package. The concerns also go beyond maintenance, it is also a question of support: with growing users there is an ever increase in questions by users. Unfortunately, the number of users that reply to other users does not seem to scale with the number of users asking questions, increasing the burden on maintainers.\nThis brings us to the third point, namely the involvement of the broader community. Clearly there is a large community of people interested in network analysis packages, and while this includes many researchers in academia, this also includes people in non-governmental organisations or enterprises. But how do we reach those communities? How do we involve those broader communities with these software packages?\n\n\nSolutions\nWe didn’t just discuss challenges, we also discussed various potential solutions. Many of the technical challenges can be addressed with more discussion and work among the various network packages. A critical barrier to those technical challenges is the resources to make that happen. Luckily, there are various dedicated funding programs targeted at research software, such as CZI EOSS or the DFG, or funding programs targeted at open source software more generally, such as the Sovereign Tech Fund. However, even such funding streams are typically limited to a time horizon of at most a few years. A more structural, long-term solution is necessary.\nOne interesting suggestion for funding revolves around academic users, which most likely represent a large share of the total user base. Many researchers apply for funding to do research, and grants typically cover salaries of researchers and travel costs. However, grants can often also cover other things, such as infrastructure costs. Many of the network analysis packages are open, and free to use. But what if a fraction, say 1% of a grant, would be reserved to support the software packages it intends to use in its research?\nAlthough funding is important to ensure the sustainability of network analysis software, it can never be done without the support of the broader community. This includes stimulating users to be active on support forums, helping out others when needed. We could also teach students in network science to not only make use of existing tools, but also help contribute back. This can range from supporting other users and improving documentation to fixing bugs. Some students might even consider becoming more involved as maintainers. Conferences in network science could also dedicate time to specific software events, such as hackathons. There could be special network software prizes to draw more attention to network analysis software, following the example of the Richards Awards. Many maintainers and developers are also academics, and citing the package that you used for your research may be critical to their academic success.\n\n\nOrganisation\nCritically, many of the suggestions above need a longer term commitment, going beyond this blogpost, and going beyond the workshop that we organised. There was consensus among all participating packages that we should therefore set up a separate organisation. A collective organisation that can represent all network packages and advocate on their behalf: the Network Analysis Software Collective. The central mission of the Network Analysis Software Collective is to promote and coordinate the sustainability of community-driven network analysis software. We already reached out to other network analysis software packages and to the Network Science Society and the International Network for Social Network Analysis. We look forward to collaborating with all parties involved to make this a success."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome",
    "section": "",
    "text": "Welcome\nWelcome to the Network Analysis Software Collective (NASCol). Our mission is to foster the sustainability of network analysis software. The power of network analysis is undeniable, offering insights that drive innovation across many different research areas. NASCol believes in the transformative potential of open-source software to make advanced network analysis accessible, reliable, and enduring. By uniting developers, researchers, and enthusiasts in a collaborative collective, we dedicate ourselves to the continuous development, maintenance, and enhancement of tools that stand the test of time. Join us in building a future where network analysis is an open resource for all, empowering discovery and progress.\n\n\n\n\n\nRecent Blog posts\n\n\n\n\n\n\n\n\n\n\nSustainability of network analysis software\n\n\n\n\n\n\n\n\n\n\n\nNov 24, 2023\n\n\nVincent Traag, Jarrod Millman, Michał Bojanowski\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Who we are",
    "section": "",
    "text": "Who we are\nThe Network Analysis Software Collective is a group of packages, developers and scholars dedicated to make network analysis software sustainable. The packages that are participating in the collective can be found under Packages.\n\n\nContact\nYou can reach the collective at info@nascol.net. If a package is interested in joining the collective, please reach out."
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "NASCol - Network Analysis Software Collective",
    "section": "",
    "text": "Sustainability of network analysis software\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nNov 24, 2023\n\n\nVincent Traag, Jarrod Millman, Michał Bojanowski\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/index.html",
    "href": "packages/index.html",
    "title": "NASCol - Network Analysis Software Collective",
    "section": "",
    "text": "Python\n    \n        \n            \n                \n                    \n                    \n                    \n                \n                \n                    graph-tool\n                \n                \n                    Graph-tool is an efficient Python module for manipulation and statistical\nanalysis of graphs. Contrary to most other Python modules with similar\nfunctionality, the core data structures and algorithms are implemented in\nC++, making extensive use of template metaprogramming, based heavily on\nthe Boost Graph Library. This confers it a level of performance that is\ncomparable (both in memory usage and computation time) to that of a pure C/C++ library. \n\n                \n            \n        \n            \n                \n                    \n                    \n                    \n                \n                \n                    NetworKit\n                \n                \n                    NetworKit is a growing open-source toolkit for large-scale network\nanalysis. \nIts aim is to provide tools for the analysis of large networks in the\nsize range \nfrom thousands to billions of edges. For this purpose, it implements\nefficient graph algorithms, \nmany of them parallel to utilize multicore architectures.\n\n                \n            \n        \n            \n                \n                    \n                    \n                    \n                \n                \n                    NetworkX\n                \n                \n                    NetworkX is a Python package for the creation, manipulation, and study of the structure, dynamics, and functions of complex networks.\n\n                \n            \n        \n            \n                \n                    \n                    \n                    \n                \n                \n                    textnets\n                \n                \n                    textnets represents collections of texts as networks of documents and words. This provides novel possibilities for the visualization and analysis of texts.\n\n                \n            \n        \n            \n                \n                    \n                    \n                    \n                \n                \n                    Raphtory\n                \n                \n                    Raphtory is a Python package for the storage, modelling and analysis of temporal graphs/networks. It supports a very wide notion of temporal network \nincluding link-streams, edges with duration and sequences of network snapshots, complemented with an expressive API for analysing the graph over different\ntimes and timescales. Written with scalability to large networks in mind, its core engine is written in Rust to enable memory-efficient and fast \ncomputation but is wrapped in a Python module so that no Rust knowledge is required.\n\n                \n            \n        \n            \n                \n                    \n                    \n                    \n                \n                \n                    netin\n                \n                \n                    NetIn is a python package for network inference.\nIt is based on the NetworkX package and provides a set of methods to study network inequalities.\nThe package is growing andwill be updated regularly.\n\n                \n            \n        \n            \n                \n                    \n                    \n                    \n                \n                \n                    XGI\n                \n                \n                    The CompleX Group Interactions (XGI) library provides\ndata structures and algorithms for modeling and analyzing\ncomplex systems with group (higher-order) interactions.\n\n                \n            \n        \n            \n                \n                    \n                    \n                    \n                \n                \n                    CDlib\n                \n                \n                    Community Detection Library (CDlib) is a python library that provides\na set of reference implementations of community discovery algorithms\nfor complex (static and dynamic) networks - along with evaluation and visualization tools.\n\n                \n            \n        \n            \n                \n                    \n                    \n                    \n                \n                \n                    NDlib\n                \n                \n                    Network Diffusion Library (NDlib) is a python library that provides\na reference implementation of agent-based diffusion dynamics \n(Epidemics and Opinion Dynamics) on complex networks.\n\n                \n            \n        \n            \n                \n                    \n                    \n                    \n                \n                \n                    DyNetX\n                \n                \n                    DyNetX is a Python library for dynamic network analysis. It provides\ndata structures and algorithms for modeling and analyzing dynamic\nnetwork topologies (Stream and Snapshot Graphs).\n\n                \n            \n        \n            \n                \n                    \n                    \n                    \n                \n                \n                    ASH\n                \n                \n                    ASH is a Python library for the analysis of Attributed Streaming Hypergraphs (ASH).\nIt provides data structures and algorithms for modeling and analyzing dynamic \nhypergraphs with node attributes.\n\n                \n            \n        \n    \n\n    R\n    \n        \n            \n                \n                    \n                    \n                    \n                \n                \n                    statnet\n                \n                \n                    The statnet project publishes a suite of open source R-based software\npackages for network analysis\n\n                \n            \n        \n            \n                \n                    \n                    \n                    \n                \n                \n                    graphlayouts\n                \n                \n                    This package implements some graph layout algorithms\n\n                \n            \n        \n            \n                \n                    \n                    \n                    \n                \n                \n                    netrankr\n                \n                \n                    Implements methods for centrality related analyses of networks. \nWhile the package includes the possibility to build more than 20 indices, \nits main focus lies on index-free assessment of centrality via partial \nrankings obtained by neighborhood-inclusion or positional dominance\n\n                \n            \n        \n            \n                \n                    \n                    \n                    \n                \n                \n                    signnet\n                \n                \n                    The package provides methods to analyse signed networks (i.e. networks with both positive and negative ties)\n\n                \n            \n        \n            \n                \n                    \n                    \n                    \n                \n                \n                    snahelper\n                \n                \n                    snahelper provides a set RStudio Addin for social network analysis\n\n                \n            \n        \n            \n                \n                    \n                    \n                    \n                \n                \n                    networkdata\n                \n                \n                    The package contains a large variety of different network datasets\n\n                \n            \n        \n            \n                \n                    \n                    \n                    \n                \n                \n                    edgebundle\n                \n                \n                    An R package that implements several edge bundling/flow and metro map algorithms\n\n                \n            \n        \n            \n                \n                    \n                    \n                    \n                \n                \n                    netUtils\n                \n                \n                    netUtils is a collection of tools for network analysis that may not deserve a package on their own and/or are missing from other network packages.\n\n                \n            \n        \n            \n                \n                    \n                    \n                    \n                \n                \n                    rgraph6\n                \n                \n                    Functions in this package allow for encoding network data as strings of\nprintable ASCII characters and back using graph6, sparse6, and digraph6\nformats\n\n                \n            \n        \n            \n                \n                    \n                    \n                    \n                \n                \n                    backbone\n                \n                \n                    An implementation of methods for extracting an unweighted unipartite\ngraph (i.e. a backbone) from an unweighted unipartite graph, a weighted\nunipartite graph, the projection of an unweighted bipartite graph,\nor the projection of a weighted bipartite graph \n\n                \n            \n        \n            \n                \n                    \n                    \n                    \n                \n                \n                    incidentally\n                \n                \n                    Functions to generate incidence matrices and bipartite graphs that have\n(1) a fixed fill rate, (2) given marginal sums, (3) marginal sums that\nfollow given distributions, or (4) represent bill sponsorships in the US\nCongress. It can also generate an incidence\nmatrix from an adjacency matrix, or bipartite graph from a unipartite\ngraph, via a social process mirroring team, group, or organization\nformation\n\n                \n            \n        \n            \n                \n                    \n                    \n                    \n                \n                \n                    grand\n                \n                \n                    Interactively applies the Guidelines for Reporting About Network Data\n(GRAND) to an igraph object, and generates a uniform narrative or\ntabular description of the object.\n\n                \n            \n        \n            \n                \n                    \n                    \n                    \n                \n                \n                    manynet\n                \n                \n                    manynet provides many fundamental tools for working with many (if not\nmost) types, formats, and classes of networks. These include\nfunctions for making networks (e.g. importing existing data, generating\nvarious random graphs), modifying networks (e.g.\nreformatting, transforming, splitting, and joining), to easy mapping for\nvisualising graphs with sensible and flexible default\nindividually, comparatively, and dynamically.   \n\n                \n            \n        \n            \n                \n                    \n                    \n                    \n                \n                \n                    migraph\n                \n                \n                    migraph builds on {manynet} to enable network analysis and modelling of\nmultimodal, multilevel, and multilayer networks. It includes a range of measures that all work\nfor one- and two-mode networks, their nodes and ties, algorithms for identifying motifs and\ncommunity or equivalence memberships in them, and modelling one- and\ntwo-mode networks with multiple regression quadratic assignment\nprocedure (MRQAP).\n\n                \n            \n        \n            \n                \n                    \n                    \n                    \n                \n                \n                    goldfish\n                \n                \n                    goldfish offers tools for applying statistical models to\nnetwork/relational event data, \ntime-stamped sequences of interactions or affiliations between actors or\nentities within a \nnetwork. In addition to relational event models (REMs), the package\nincludes rate, choice, and coordination \nprocesses for one- and two-mode dynamic network actor models (DyNAMs) and dynamic network actor models for interactions (DyNAMi).\n\n                \n            \n        \n            \n                \n                    \n                    \n                    \n                \n                \n                    rsiena\n                \n                \n                    rsiena performs simulation-based estimation of Stochastic Actor-oriented\nModels (SAOMs) for \nlongitudinal network data collected as panel data (repeated observations \nof social networks on the same node set - minor changes of the node set\nare allowed). Dependent variables can be single or multivariate\nnetworks, which can \nbe directed, non-directed, or two-mode; these can be combined with actor\nvariables, \nwhich then leads to a \"networks and behavior\" study.\n\n                \n            \n        \n            \n                \n                    \n                    \n                    \n                \n                \n                    MoNAn\n                \n                \n                    MoNAn implements the method to analyse weighted mobility networks or \ndistribution networks as outlined in: Block et al (2022, Social\nNetworks). \nThe purpose of the model is to analyse the structure of mobility, \nincorporating exogenous predictors pertaining to individuals and\nlocations \nknown from classical mobility analyses, as well as modelling \nemergent mobility patterns akin to structural patterns known from the\nstatistical \nanalysis of social networks.\n\n                \n            \n        \n            \n                \n                    \n                    \n                    \n                \n                \n                    ERPM\n                \n                \n                    ERPM extends exponential random graph models (ERGMs) for \npartitions, i.e. sets of non-overlapping groups, such \nas face-to-face interactions, animal herds, political \ncoalitions, etc. This model can be used to explain cross-sectional \nor longitudinal observed partitions through group formation \nprocesses based on individual attributes, relations between \nindividuals, and size-related factors.\n\n                \n            \n        \n            \n                \n                    \n                    \n                    \n                \n                \n                    netdiffuseR\n                \n                \n                    netdiffuseR is a package for the analysis of diffusion and contagion\nprocesses on networks. The package provides tools to simulate, analyze\nand visualize diffusion processes on networks. The package is designed\nto be used in the analysis of diffusion of innovations, infections and\ninformation on networks.\n\n                \n            \n        \n            \n                \n                    \n                    \n                    \n                \n                \n                    rgexf\n                \n                \n                    rgexf is an R package to create, read and write GEXF (Graph Exchange XML\nFormat) files, used by Gephi and other network visualization tools.\n\n                \n            \n        \n            \n                \n                    \n                    \n                    \n                \n                \n                    netplot\n                \n                \n                    A graph visualization engine that emphasizes on \naesthetics at the same time providing default parameters that yield\nout-of-the-box-nice visualizations. The package is built on top of\n'The Grid Graphics Package' and seamlessly work with 'igraph' and \n'network' objects.\n\n                \n            \n        \n            \n                \n                    \n                    \n                    \n                \n                \n                    ergmito\n                \n                \n                    Simulation and estimation of Exponential Random Graph Models (ERGMs)\nfor small networks using exact statistics as shown in Vega Yon et al. \n(2020). As a difference from the \n'ergm' package, 'ergmito' circumvents using Markov-Chain Maximum \nLikelihood Estimator (MC-MLE) and instead uses Maximum Likelihood \nEstimator (MLE) to fit ERGMs for small networks. As exhaustive \nenumeration is computationally feasible for  small networks, this R \npackage takes advantage of this and provides tools for\ncalculating likelihood functions, and other relevant functions, \ndirectly, meaning that in many cases both estimation and simulation of \nERGMs for small networks can be faster and more accurate than \nsimulation-based algorithms.\n\n                \n            \n        \n    \n\n    Multiplatform or standalone\n    \n        \n            \n                \n                    \n                    \n                    \n                \n                \n                    igraph\n                \n                \n                    igraph is a collection of network analysis tools with the emphasis on\nefficiency,\nportability and ease of use. igraph is open source and free. igraph can\nbe programmed in R, Python, Mathematica and C/C++.\n\n                \n            \n        \n            \n                \n                    \n                    \n                    \n                \n                \n                    Gephi\n                \n                \n                    Gephi is the leading visualization and exploration software for all kinds of graphs and networks. \n\n                \n            \n        \n            \n                \n                    \n                    \n                    \n                \n                \n                    Pajek\n                \n                \n                    Analysis and visualization of very large networks\n\n                \n            \n        \n            \n                \n                    \n                    \n                    \n                \n                \n                    NodeXL\n                \n                \n                    NodeXL makes it easy to explore, analyze and visualize network graphs in Microsoft Office Excel\n\n                \n            \n        \n            \n                \n                    \n                    \n                    \n                \n                \n                    SocNetV\n                \n                \n                    Social Network Analysis and Visualization Software\n\n                \n            \n        \n            \n                \n                    \n                    \n                    \n                \n                \n                    Cytoscape\n                \n                \n                    Cytoscape is a free, open source software platform for visualizing complex networks and integrating diverse types of data. Over 350 apps are available for various kinds of problem domains, including biomedical research and social network analysis.\n\n                \n            \n        \n    \n\n\nNo matching items"
  }
]